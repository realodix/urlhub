name: tests

on: [pull_request, push]

jobs:
  build:
    name: PHP ${{ matrix.php-version }} - ${{ matrix.stability }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-version: ['8.0', '8.1']
        stability: [lowest, stable]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: xdebug

      # https://github.com/actions/cache/blob/main/examples.md#php---composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      # https://github.com/actions/cache/blob/main/examples.md#windows-3
      - name: Get NPM Cache Directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies (Composer)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: composer update --prefer-${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      - name: Install Dependencies (NPM)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: npm install

      - name: Prepare
        run: |
          php artisan config:clear
          npm run dev

      - name: Execute Tests
        run: ./vendor/bin/phpunit --coverage-clover build/logs/clover.xml

      - name: Upload Coverage Results To Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml --verbose
